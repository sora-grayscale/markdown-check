name: 📝 Markdown Format Check

on:
  pull_request:
    paths:
      - 'docs/*.md'
      - 'README.md'
      - '.markdownlint.json'
      - '.markdown-link-check.json'

# ========== 環境変数でMarkdownパスを定義 ==========
env:
  MD_PATHS: '"docs/*.md" "README.md"'
  MD_GLOB_PATTERN: 'docs/*.md README.md'

jobs:
  markdown-lint:
    name: 🔍 Markdown Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install markdownlint-cli
      run: npm install -g markdownlint-cli
      
    - name: 🔍 Run markdownlint
      run: markdownlint ${{ env.MD_PATHS }} --config .markdownlint.json
      
    - name: 📊 Comment PR with results
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ **Markdownのフォーマットエラーが検出されました**\n\n詳細は[Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})で確認してください。\n\n修正後、再度プッシュしてください。 🔧'
          })

  markdown-format:
    name: 📐 Markdown Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install prettier
      run: npm install -g prettier
      
    - name: 🎨 Check Prettier formatting
      run: prettier --check ${{ env.MD_PATHS }}
      
    - name: 📝 Generate format diff (if failed)
      if: failure()
      run: |
        echo "## 📝 Formatting Suggestions" >> format-diff.md
        echo "" >> format-diff.md
        prettier --list-different ${{ env.MD_PATHS }} || true
        echo "上記のファイルでフォーマットの問題が見つかりました。" >> format-diff.md
        
    - name: 📊 Upload format diff
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: format-suggestions
        path: format-diff.md

  link-checker:
    name: 🔗 Link Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: 📦 Install markdown-link-check
      run: npm install -g markdown-link-check
      
    - name: 🔗 Check markdown links
      run: |
        # 指定されたMarkdownファイルのみをチェック
        for file in ${{ env.MD_GLOB_PATTERN }}; do
          if [ -f "$file" ]; then
            echo "Checking links in: $file"
            markdown-link-check "$file" --config .markdown-link-check.json
          fi
        done

  summary:
    name: 📋 Check Summary
    runs-on: ubuntu-latest
    needs: [markdown-lint, markdown-format, link-checker]
    if: always()
    
    steps:
    - name: 📊 Generate summary
      run: |
        echo "## 📝 Markdown品質チェック結果" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**チェック対象ファイル**: ${{ env.MD_GLOB_PATTERN }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.markdown-lint.result }}" == "success" ]; then
          echo "✅ **Markdown Lint**: パス" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Markdown Lint**: 失敗" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.markdown-format.result }}" == "success" ]; then
          echo "✅ **Format Check**: パス" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Format Check**: 失敗" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.link-checker.result }}" == "success" ]; then
          echo "✅ **Link Check**: パス" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Link Check**: 失敗" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "詳細は各ジョブのログを確認してください。" >> $GITHUB_STEP_SUMMARY